AWSTemplateFormatVersion: '2010-09-09'
Description: This stack creates all Lambda functions
Mappings:
  EnvironmentMap:
    DEV:
      ClientSecret: T0FVVEhfRVhUX0dXOlBhc3NediE/REB6Q1RhKllKP3pDVCZ1eQ==
      TokenHost: tt.execute-api.us-east-1.amazonaws.com
    QA:
      ClientSecret: T0FVVEhfRVhUX0dXOlBhc3NediE/REB6Q1RhKllKP3pDVCZ1eQ==
      TokenHost: tt.execute-api.us-east-1.amazonaws.com
Outputs:
  ApiGWAuthorizerRole:
    Description: The ARN of API Gateway Authorizer role
    Export:
      Name:
        Fn::Join:
        - ':'
        - - Ref: AWS::StackName
          - ApiGWAuthorizerRoleArn
    Value:
      Fn::GetAtt:
      - ApiGWAuthorizerRole
      - Arn
  TokenGenFunction:
    Description: Token Gen Function Arn
    Export:
      Name:
        Fn::Join:
        - ':'
        - - Ref: AWS::StackName
          - TokenGenFunctionArn
    Value:
      Fn::GetAtt:
      - TokenGenFunction
      - Arn
  TokenValidatorFunction:
    Description: Token Validator Function Arn
    Export:
      Name:
        Fn::Join:
        - ':'
        - - Ref: AWS::StackName
          - TokenValidatorFunctionArn
    Value:
      Fn::GetAtt:
      - TokenValidatorFunction
      - Arn
Parameters:
  Environment:
    AllowedValues:
    - DEV
    - QA
    Description: Environment Name (DEV/QA)
    Type: String
  LoadBalancerStackName:
    Description: Name of the stack used to create Load balancer
    Type: String
  Platform:
    Default: TEST-SERVICES
    Description: Platform Name
    Type: String
  RoleStackName:
    Description: Name of the stack used to create IAM roles required for ECS
    Type: String
Resources:
  ApiGWAuthorizerRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - lambda:invokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
              - TokenValidatorFunction
              - Arn
          Version: '2012-10-17'
        PolicyName: LambdaInvokePolicy
      RoleName:
        Fn::Sub: ${Environment}-${Platform}-API-GW-AUTH-ROLE-02
    Type: AWS::IAM::Role
  TokenGenFunction:
    Properties:
      Code:
        S3Bucket: dev-chris-web-test-services-token-lambda-us-east-1-01
        S3Key: caecdb118a69e8d8ffa284a8a1a96af4
      Description: Lambda function to create token
      Environment:
        Variables:
          CACHE_TOKEN_URL:
            Fn::ImportValue:
              Fn::Join:
              - ':'
              - - Ref: LoadBalancerStackName
                - CacheUrl
          CLIENT_SECRET:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - ClientSecret
          TOKEN_HOST:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - TokenHost
          TOKEN_URL:
            Fn::ImportValue:
              Fn::Join:
              - ':'
              - - Ref: LoadBalancerStackName
                - TokenUrl
      FunctionName:
        Fn::Sub: ${Environment}-${Platform}-TOKEN-GEN-LAMBDA-01
      Handler: token_gen.lambda_handler
      Role:
        Fn::ImportValue:
          Fn::Join:
          - ':'
          - - Ref: RoleStackName
            - TokenLambdaRoleArn
      Runtime: python3.6
    Type: AWS::Lambda::Function
  TokenGenLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${TokenGenFunction}
      RetentionInDays: 7
    Type: AWS::Logs::LogGroup
  TokenValidatorFunction:
    Properties:
      Code:
        S3Bucket: dev-chris-web-test-services-token-lambda-us-east-1-01
        S3Key: adc61b38611a467dafa7f92e7bbc180d
      Description: Lambda function to validate token
      Environment:
        Variables:
          CACHE_TOKEN_URL:
            Fn::ImportValue:
              Fn::Join:
              - ':'
              - - Ref: LoadBalancerStackName
                - CacheUrl
          CLIENT_SECRET:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - ClientSecret
          TOKEN_HOST:
            Fn::FindInMap:
            - EnvironmentMap
            - Ref: Environment
            - TokenHost
          TOKEN_URL:
            Fn::ImportValue:
              Fn::Join:
              - ':'
              - - Ref: LoadBalancerStackName
                - TokenUrl
      FunctionName:
        Fn::Sub: ${Environment}-${Platform}-TOKEN-VALIDATOR-LAMBDA-02
      Handler: token_validator.lambda_handler
      Role:
        Fn::ImportValue:
          Fn::Join:
          - ':'
          - - Ref: RoleStackName
            - TokenLambdaRoleArn
      Runtime: python3.6
    Type: AWS::Lambda::Function
  TokenValidatorLogGroup:
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${TokenValidatorFunction}
      RetentionInDays: 7
    Type: AWS::Logs::LogGroup
